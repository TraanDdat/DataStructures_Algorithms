* Example Tree
        A (root)
       / \
      B   C
     / \    \
    D   E    F
   / \
  G   H

* The Binary Tree is always have <= 2 children in parent
    - deg(T) = 0 or 1 or 2;
    - children = {0,1,2};

* Number of Binary Trees:
    - Catalan Number: 
                2.n
                    Cn
        T(n) =  ------
                n + 1
    Ex:
                2*5         10*9*8*7*6
                    C5      ----------
        T(5) =  ------ =    5*4*3*2*1   = 3 * 2 *7   OR T(5) = [from i = 1 to n] T(i-1)*T(n-i)
                5 + 1       ----------
                                6

* Number of Binary Tree with the maximum height:
    Ex:
    T(3): Number of Binary Tree with the maximum height -> 4 = 2^2 
    T(4): Number of Binary Tree with the maximum height -> 8 = 2^3
    ...
    T(n): Number of Binary Tree with the maximum height -> 2^(n-1) 

* How many labeled nodes:
            2.n
                Cn
    T(n) =  ------ * n!
            n + 1

* Height and Nodes:
    Ex:
    - Height = 1
        - Minimum nodes: n = 2
            O
           /
          O
        - Maximum nodes: n = 3
            O
           / \
          O   O
    
    - Height = 2
        - Minimum nodes: n = 3
        - Maximum nodes: n = 7
    - Height = 3
        - Minimum nodes: n = 4
        - Maximum nodes: n = 15
    
    Formula: if height is given
        - Minimum nodes: n = height + 1
        - Maximum nodes: n = (2^(h+1)) - 1

    Formula: if nodes is given
        - Minimum height: n = height + 1 -> height = n- 1
        - Maximum height: n = (2^(h+1)) - 1 -> height = (log2(n+1)) - 1